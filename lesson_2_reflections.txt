What happens when you initialize a repository? Why do you need to do it?

	An empty git repository is created locally. It doesnt know what all files are to be added to it. We can add the files we want to, to keep a track of their versions.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	Working directory contains all the files, whereas, staging area contains the files which we want to commit. That is, it generally contains all the files whose changes are logically related.
	

How can you use the staging area to make sure you have one commit per logical
change?

	Add only those files to the staging area, changes in which are logically similar.
	Then commit those changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	When we add some new features, which we are unsure of, we should do that on a separate branch, and later merge. 
	We can work on different features on different branches. 
	Master branch should always work, never break.

How do the diagrams help you visualize the branch structure?

	We get to know what all changes are in what part of the thread. Like, what soecific changes are in what branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?